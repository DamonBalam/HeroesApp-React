{"version":3,"sources":["auth/authContext.js","components/types/types.js","auth/authReducer.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","components/ui/NavBar.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","name","replace","heroes","id","superhero","publisher","alter_ego","first_appearance","characters","HeroCard","hero","style","maxWidth","src","alt","to","HeroList","useMemo","includes","Error","filter","getHeroesByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","length","push","goBack","MarvelScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","onChange","autoComplete","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"iKAEaA,EAAcC,0B,OCFdC,EACH,eADGA,EAEF,gBCAEC,EAAc,WAA2B,IAAzBC,EAAwB,uDAAhB,GAAIC,EAAY,uCAEjD,cAAQA,QAAR,IAAQA,OAAR,EAAQA,EAAQC,MACZ,KAAKJ,EACD,OAAO,2BACAG,EAAOE,SADd,IAEIC,QAAO,IAGf,KAAKN,EACD,MAAO,CACHM,QAAQ,GAGhB,QACI,OAAOJ,I,cCbNK,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,QAElBC,EAAaC,qBAAYZ,GAAzBW,SAiBR,OACI,sBAAKE,UAAU,iBAAf,UACI,8CACA,uBACA,wBACIA,UAAU,kBACVC,QArBQ,WAEhB,IAAMC,EAAWC,aAAaC,QAAQ,aAAe,IAErDN,EAAS,CACLL,KAAMJ,EACNK,QAAS,CACLW,KAAM,YAIdR,EAAQS,QAAQJ,IAQZ,uBC3BCK,EAAS,CAClB,CACIC,GAAI,YACJC,UAAW,SACXC,UAAW,YACXC,UAAW,cACXC,iBAAkB,uBAClBC,WAAY,eAEhB,CACIL,GAAI,cACJC,UAAW,WACXC,UAAW,YACXC,UAAW,SACXC,iBAAkB,mBAClBC,WAAY,UAEhB,CACIL,GAAI,WACJC,UAAW,QACXC,UAAW,YACXC,UAAW,cACXC,iBAAkB,kBAClBC,WAAY,oDAEhB,CACIL,GAAI,WACJC,UAAW,gBACXC,UAAW,YACXC,UAAW,aACXC,iBAAkB,0BAClBC,WAAY,6FAEhB,CACIL,GAAI,WACJC,UAAW,cACXC,UAAW,YACXC,UAAW,eACXC,iBAAkB,sBAClBC,WAAY,gBAEhB,CACIL,GAAI,YACJC,UAAW,eACXC,UAAW,YACXC,UAAW,iBACXC,iBAAkB,qBAClBC,WAAY,kBAEhB,CACIL,GAAI,aACJC,UAAW,oBACXC,UAAW,YACXC,UAAW,eACXC,iBAAkB,wBAClBC,WAAY,qBAEhB,CACIL,GAAI,WACJC,UAAW,kBACXC,UAAW,YACXC,UAAW,eACXC,iBAAkB,uBAClBC,WAAY,gBAEhB,CACIL,GAAI,UACJC,UAAW,cACXC,UAAW,YACXC,UAAW,aACXC,iBAAkB,wBAClBC,WAAY,qCAEhB,CACIL,GAAI,WACJC,UAAW,eACXC,UAAW,YACXC,UAAW,cACXC,iBAAkB,mBAClBC,WAAY,4BAEhB,CACIL,GAAI,gBACJC,UAAW,aACXC,UAAW,gBACXC,UAAW,eACXC,iBAAkB,sBAClBC,WAAY,gBAEhB,CACIL,GAAI,iBACJC,UAAW,kBACXC,UAAW,gBACXC,UAAW,eACXC,iBAAkB,4BAClBC,WAAY,gBAEhB,CACIL,GAAI,cACJC,UAAW,WACXC,UAAW,gBACXC,UAAW,aACXC,iBAAkB,wBAClBC,WAAY,cAEhB,CACIL,GAAI,cACJC,UAAW,OACXC,UAAW,gBACXC,UAAW,eACXC,iBAAkB,0BAClBC,WAAY,gBAEhB,CACIL,GAAI,cACJC,UAAW,OACXC,UAAW,gBACXC,UAAW,eACXC,iBAAkB,yBAClBC,WAAY,gBAEhB,CACIL,GAAI,mBACJC,UAAW,YACXC,UAAW,gBACXC,UAAW,gBACXC,iBAAkB,2BAClBC,WAAY,iBAEhB,CACIL,GAAI,mBACJC,UAAW,YACXC,UAAW,gBACXC,UAAW,0BACXC,iBAAkB,eAClBC,WAAY,2BAEhB,CACIL,GAAI,iBACJC,UAAW,UACXC,UAAW,gBACXC,UAAW,yBACXC,iBAAkB,wBAClBC,WAAY,0BAEhB,CACIL,GAAI,iBACJC,UAAW,UACXC,UAAW,gBACXC,UAAW,gBACXC,iBAAkB,WAClBC,WAAY,iBAEhB,CACIL,GAAI,gBACJC,UAAW,gBACXC,UAAW,gBACXC,UAAW,cACXC,iBAAkB,yBAClBC,WAAY,gBC3JPC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfP,EAA2DO,EAA3DP,GAAIC,EAAuDM,EAAvDN,UAAWE,EAA4CI,EAA5CJ,UAAWC,EAAiCG,EAAjCH,iBAAkBC,EAAeE,EAAfF,WAEpD,OACI,qBAAKb,UAAW,YAAagB,MAAQ,CAAEC,SAAS,KAAhD,SACI,sBAAKjB,UAAW,iBAAhB,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKkB,IAAG,0BAAqBV,EAArB,QAA+BR,UAAW,WAAYmB,IAAI,2BAEtE,qBAAKnB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA6BS,IAC7B,mBAAGT,UAAU,YAAb,SACMW,IAIDA,IAAcE,GAAe,mBAAGb,UAAU,YAAb,SAA2Ba,IAG7D,mBAAGb,UAAU,YAAb,SACI,uBAAOA,UAAU,aAAjB,SAAgCY,MAGpC,cAAC,IAAD,CAAMQ,GAAE,iBAAaZ,GAAOR,UAAU,4BAAtC,sCCvBXqB,EAAW,SAAC,GAAmB,IAAjBX,EAAgB,EAAhBA,UAEjBH,EAASe,mBAAQ,kBCNS,SAAEZ,GAKlC,IAHuB,CAAC,YAAY,iBAGfa,SAAUb,GAC3B,MAAM,IAAIc,MAAJ,qBAAwBd,EAAxB,qBAIV,OAAOH,EAAOkB,QAAQ,SAAAV,GAAI,OAAIA,EAAKL,YAAcA,KDJpBgB,CAAsBhB,KAAa,CAACA,IAEjE,OACI,qBAAKV,UAAU,iDAAf,SACKO,EAAOoB,KAAI,SAACZ,GAAD,OACR,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKP,UETvBoB,EAAW,WACpB,OACI,gCACI,2CACA,uBAEA,cAAC,EAAD,CAAUlB,UAAU,kBCLnBmB,EAAa,SAAC,GAAiB,IAAfhC,EAAc,EAAdA,QACjBiC,EAAYC,cAAZD,QAEFf,EAAOO,mBAAQ,kBCJId,EDIcsB,ECF1BvB,EAAOkB,QAAO,SAACV,GAAD,OAAUA,EAAKP,KAAOA,KACrC,GAHW,IAAEA,IDIwB,CAAEsB,IAGnD,IAAKf,EACD,OAAO,cAAC,IAAD,CAAUK,GAAG,MAGxB,IAQQX,EAAkEM,EAAlEN,UAAWC,EAAuDK,EAAvDL,UAAWC,EAA4CI,EAA5CJ,UAAWC,EAAiCG,EAAjCH,iBAAkBC,EAAeE,EAAfF,WAE3D,OACI,sBAAKb,UAAU,WAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBACIkB,IAAG,2BAAsBY,EAAtB,QACHX,IAAKV,EACLT,UAAU,0DAIlB,sBAAKA,UAAU,kDAAf,UACI,6BAAKS,IACL,qBAAIT,UAAU,+BAAd,UACI,qBAAIA,UAAU,kBAAd,UACK,IACD,6CAFJ,IAEyBW,KAEzB,qBAAIX,UAAU,kBAAd,UACK,IACD,6CAFJ,IAEyBU,KAEzB,qBAAIV,UAAU,kBAAd,UACK,IACD,oDAFJ,IAEgCY,QAIpC,4CAEA,4BAAIC,IAEJ,wBAAQb,UAAU,uBAAuBC,QAzChC,WACbJ,EAAQmC,QAAU,EAClBnC,EAAQoC,KAAK,KAEbpC,EAAQqC,UAqCJ,2BEpDHC,EAAe,WACxB,OACI,gCACI,+CACA,uBAEA,cAAC,EAAD,CAAUzB,UAAU,sB,yBCCnB0B,EAAe,SAAC,GAAiB,IAAfvC,EAAc,EAAdA,QAGrBwC,EAAWC,cAHwB,EAMtBC,IAAYC,MAAOH,EAASI,QAAvCC,SANiC,MAM7B,GAN6B,ICRtB,SAACC,GAAkB,IAAD,EACTC,mBAASD,GADA,mBAC9BE,EAD8B,KACtBC,EADsB,KAcrC,MAAO,CAACD,EAPkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACzBD,EAAU,2BACHD,GADE,kBAEJE,EAAO1C,KAAO0C,EAAOC,UAPhB,WACVF,EAAUH,KDY0BM,CAAQ,CAC5CC,WAAYR,IATyB,mBAQlCS,EARkC,KAQtBC,EARsB,KAcjCF,EAAeC,EAAfD,WAIFG,EAAiB/B,mBAAQ,kBE1BJ,WAAkB,IAAhBjB,EAAe,uDAAR,GAGpC,MAAc,KAATA,EACM,IAGXA,EAAOA,EAAKiD,cAEL/C,EAAOkB,QAAO,SAACV,GAAD,OAAUA,EAAKN,UAAU6C,cAAc/B,SAAUlB,OFiBjCkD,CAAgBb,KAAI,CAAEA,IAU3D,OACI,sBAAK1C,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,+CACA,uBAEA,uBAAMwD,SAdG,SAACC,GAClBA,EAAEC,iBAEF7D,EAAQoC,KAAR,aAAoBiB,KAWZ,UACI,uBACIlD,UAAU,eACVP,KAAK,OACLkE,YAAY,iBACZtD,KAAK,aACL2C,MAAOE,EACPU,SAAUR,EACVS,aAAa,QAGjB,wBAAQpE,KAAK,SAASO,UAAU,sCAAhC,6BAMR,sBAAKA,UAAU,QAAf,UACI,yCACA,uBAEO,KAAN0C,GAAY,qBAAK1C,UAAU,0DAAf,2BAEZqD,EAAe1B,KAAI,SAACZ,GAAD,OAChB,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKP,cG/D3BsD,EAAS,WAAO,IAAD,EAEG/D,qBAAYZ,GAA/B4E,EAFgB,EAEhBA,KAAMjE,EAFU,EAEVA,SAERD,EAAUmE,cAiBhB,OACI,sBAAKhE,UAAU,8CAAf,UACI,cAAC,IAAD,CAAMA,UAAU,eAAeoB,GAAG,IAAlC,0BAIA,qBAAKpB,UAAU,kBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAASiE,gBAAgB,SAASjE,UAAU,oBAAoBkE,OAAK,EAAC9C,GAAG,UAAzE,oBAIA,cAAC,IAAD,CAAS6C,gBAAgB,SAASjE,UAAU,oBAAoBkE,OAAK,EAAC9C,GAAG,MAAzE,gBAIA,cAAC,IAAD,CAAS6C,gBAAgB,SAASjE,UAAU,oBAAoBkE,OAAK,EAAC9C,GAAG,UAAzE,yBAMR,qBAAKpB,UAAU,wDAAf,SACI,qBAAIA,UAAU,qBAAd,UACI,uBAAMA,UAAU,8BAAhB,cAAiD+D,EAAK1D,KAAtD,OACA,wBAASL,UAAU,wBAAwBC,QAxCtC,WAEjBH,EAAS,CACLL,KAAMJ,IAGVQ,EAAQS,QAAQ,WAkCJ,6BC3CP6D,EAAkB,WAC3B,OACI,qCACI,cAAC,EAAD,IAEA,qBAAKnE,UAAU,iBAAf,SAEI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkE,OAAK,EAACE,KAAK,UAAUC,UAAYlC,IACxC,cAAC,IAAD,CAAO+B,OAAK,EAACE,KAAK,iBAAiBC,UAAYxC,IAC/C,cAAC,IAAD,CAAOqC,OAAK,EAACE,KAAK,MAAMC,UAAYzC,IACpC,cAAC,IAAD,CAAOsC,OAAK,EAACE,KAAK,UAAUC,UAAYjC,IAGxC,cAAC,IAAD,CAAUhB,GAAG,qB,QClBpBkD,EAAe,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,gBAA4BC,EAAyB,EAApCH,UAAyBI,EAAW,+CAGhF,OAFAtE,aAAauE,QAAQ,WAAYD,EAAKpC,SAASsC,UAG3C,cAAC,IAAD,2BACQF,GADR,IAEIJ,UAAW,SAACO,GAAD,OAAYL,EAAkB,cAACC,EAAD,eAAeI,IAAY,cAAC,IAAD,CAAUxD,GAAG,gBCNhFyD,EAAc,SAAC,GAAwD,IAAtDN,EAAqD,EAArDA,gBAA4BC,EAAyB,EAApCH,UAAyBI,EAAW,+CAC/E,OACI,cAAC,IAAD,2BACQA,GADR,IAEIJ,UAAW,SAACO,GAAD,OAAaL,EAA6C,cAAC,IAAD,CAAUnD,GAAG,MAAxC,cAACoD,EAAD,eAAeI,SCIxDE,EAAY,WAAO,IAEpBf,EAAShE,qBAAWZ,GAApB4E,KAGR,OACI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAaG,OAAK,EAACE,KAAK,SAASC,UAAWzE,EAAc2E,gBAAiBR,EAAKpE,SAChF,cAAC,EAAD,CAAcyE,KAAK,IAAIC,UAAWF,EAAiBI,gBAAiBR,EAAKpE,iBChBvFoF,EAAO,WACT,OAAOC,KAAKxC,MAAMrC,aAAaC,QAAQ,UAAY,CAC/CT,QAAO,IAKFsF,EAAY,WAAO,IAAD,EAEFC,qBAAW5F,EAAa,GAAIyF,GAF1B,mBAEpBhB,EAFoB,KAEdjE,EAFc,KAW3B,OANAqF,qBAAU,WAENhF,aAAauE,QAAQ,OAAQM,KAAKI,UAAUrB,MAE7C,CAACA,IAGA,cAAC5E,EAAYkG,SAAb,CAAsBrC,MAAQ,CAAEe,OAAMjE,YAAtC,SACI,cAAC,EAAD,O,MCpBZwF,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dbc0812b.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","export const types = {\r\n    login:'[auth] login',\r\n    logout:'[auth] logout',\r\n}","import { types } from \"../components/types/types\";\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch (action?.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged:true\r\n            }    \r\n            \r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/authContext';\r\nimport { types } from '../types/types';\r\n\r\nexport const LoginScreen = ({ history } ) => {\r\n    \r\n    const { dispatch } = useContext( AuthContext );\r\n\r\n    const handleClick = () => {\r\n        \r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n        \r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Arturo',\r\n            },\r\n        });\r\n\r\n        history.replace(lastPath);\r\n\r\n    }    \r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login Screen</h1>\r\n            <hr />\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={ handleClick }\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        id: 'dc-batman',\r\n        superhero: 'Batman',\r\n        publisher: 'DC Comics',\r\n        alter_ego: 'Bruce Wayne',\r\n        first_appearance: 'Detective Comics #27',\r\n        characters: 'Bruce Wayne',\r\n    },\r\n    {\r\n        id: 'dc-superman',\r\n        superhero: 'Superman',\r\n        publisher: 'DC Comics',\r\n        alter_ego: 'Kal-El',\r\n        first_appearance: 'Action Comics #1',\r\n        characters: 'Kal-El',\r\n    },\r\n    {\r\n        id: 'dc-flash',\r\n        superhero: 'Flash',\r\n        publisher: 'DC Comics',\r\n        alter_ego: 'Jay Garrick',\r\n        first_appearance: 'Flash Comics #1',\r\n        characters: 'Jay Garrick, Barry Allen, Wally West, Bart Allen',\r\n    },\r\n    {\r\n        id: 'dc-green',\r\n        superhero: 'Green Lantern',\r\n        publisher: 'DC Comics',\r\n        alter_ego: 'Alan Scott',\r\n        first_appearance: 'All-American Comics #16',\r\n        characters: 'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz',\r\n    },\r\n    {\r\n        id: 'dc-arrow',\r\n        superhero: 'Green Arrow',\r\n        publisher: 'DC Comics',\r\n        alter_ego: 'Oliver Queen',\r\n        first_appearance: 'More Fun Comics #73',\r\n        characters: 'Oliver Queen',\r\n    },\r\n    {\r\n        id: 'dc-wonder',\r\n        superhero: 'Wonder Woman',\r\n        publisher: 'DC Comics',\r\n        alter_ego: 'Princess Diana',\r\n        first_appearance: 'All Star Comics #8',\r\n        characters: 'Princess Diana',\r\n    },\r\n    {\r\n        id: 'dc-martian',\r\n        superhero: 'Martian Manhunter',\r\n        publisher: 'DC Comics',\r\n        alter_ego: \"J'onn J'onzz\",\r\n        first_appearance: 'Detective Comics #225',\r\n        characters: 'Martian Manhunter',\r\n    },\r\n    {\r\n        id: 'dc-robin',\r\n        superhero: 'Robin/Nightwing',\r\n        publisher: 'DC Comics',\r\n        alter_ego: 'Dick Grayson',\r\n        first_appearance: 'Detective Comics #38',\r\n        characters: 'Dick Grayson',\r\n    },\r\n    {\r\n        id: 'dc-blue',\r\n        superhero: 'Blue Beetle',\r\n        publisher: 'DC Comics',\r\n        alter_ego: 'Dan Garret',\r\n        first_appearance: 'Mystery Men Comics #1',\r\n        characters: 'Dan Garret, Ted Kord, Jaime Reyes',\r\n    },\r\n    {\r\n        id: 'dc-black',\r\n        superhero: 'Black Canary',\r\n        publisher: 'DC Comics',\r\n        alter_ego: 'Dinah Drake',\r\n        first_appearance: 'Flash Comics #86',\r\n        characters: 'Dinah Drake, Dinah Lance',\r\n    },\r\n    {\r\n        id: 'marvel-spider',\r\n        superhero: 'Spider Man',\r\n        publisher: 'Marvel Comics',\r\n        alter_ego: 'Peter Parker',\r\n        first_appearance: 'Amazing Fantasy #15',\r\n        characters: 'Peter Parker',\r\n    },\r\n    {\r\n        id: 'marvel-captain',\r\n        superhero: 'Captain America',\r\n        publisher: 'Marvel Comics',\r\n        alter_ego: 'Steve Rogers',\r\n        first_appearance: 'Captain America Comics #1',\r\n        characters: 'Steve Rogers',\r\n    },\r\n    {\r\n        id: 'marvel-iron',\r\n        superhero: 'Iron Man',\r\n        publisher: 'Marvel Comics',\r\n        alter_ego: 'Tony Stark',\r\n        first_appearance: 'Tales of Suspense #39',\r\n        characters: 'Tony Stark',\r\n    },\r\n    {\r\n        id: 'marvel-thor',\r\n        superhero: 'Thor',\r\n        publisher: 'Marvel Comics',\r\n        alter_ego: 'Thor Odinson',\r\n        first_appearance: 'Journey into Myster #83',\r\n        characters: 'Thor Odinson',\r\n    },\r\n    {\r\n        id: 'marvel-hulk',\r\n        superhero: 'Hulk',\r\n        publisher: 'Marvel Comics',\r\n        alter_ego: 'Bruce Banner',\r\n        first_appearance: 'The Incredible Hulk #1',\r\n        characters: 'Bruce Banner',\r\n    },\r\n    {\r\n        id: 'marvel-wolverine',\r\n        superhero: 'Wolverine',\r\n        publisher: 'Marvel Comics',\r\n        alter_ego: 'James Howlett',\r\n        first_appearance: 'The Incredible Hulk #180',\r\n        characters: 'James Howlett',\r\n    },\r\n    {\r\n        id: 'marvel-daredevil',\r\n        superhero: 'Daredevil',\r\n        publisher: 'Marvel Comics',\r\n        alter_ego: 'Matthew Michael Murdock',\r\n        first_appearance: 'Daredevil #1',\r\n        characters: 'Matthew Michael Murdock',\r\n    },\r\n    {\r\n        id: 'marvel-hawkeye',\r\n        superhero: 'Hawkeye',\r\n        publisher: 'Marvel Comics',\r\n        alter_ego: 'Clinton Francis Barton',\r\n        first_appearance: 'Tales of Suspense #57',\r\n        characters: 'Clinton Francis Barton',\r\n    },\r\n    {\r\n        id: 'marvel-cyclops',\r\n        superhero: 'Cyclops',\r\n        publisher: 'Marvel Comics',\r\n        alter_ego: 'Scott Summers',\r\n        first_appearance: 'X-Men #1',\r\n        characters: 'Scott Summers',\r\n    },\r\n    {\r\n        id: 'marvel-silver',\r\n        superhero: 'Silver Surfer',\r\n        publisher: 'Marvel Comics',\r\n        alter_ego: 'Norrin Radd',\r\n        first_appearance: 'The Fantastic Four #48',\r\n        characters: 'Norrin Radd',\r\n    },\r\n];\r\n","import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const HeroCard = ({ hero }) => {\r\n    const { id, superhero, alter_ego, first_appearance, characters } = hero;\r\n\r\n    return (\r\n        <div className={'card ms-3'} style={ { maxWidth:540 }}>\r\n            <div className={\"row no-gutters\"}>\r\n                <div className=\"col-md-4\">\r\n                    <img src={`./assets/heroes/${id}.jpg`} className={\"card-img\"} alt=\"imagen de super hero\" />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{ superhero }</h5>\r\n                        <p className=\"card-text\">\r\n                            { alter_ego }\r\n                        </p>\r\n\r\n                        {\r\n                            (alter_ego !== characters) && <p className=\"card-text\">{ characters }</p>\r\n                        }\r\n\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{ first_appearance }</small>\r\n                        </p>\r\n\r\n                        <Link to={`./hero/${ id }`} className=\"btn btn-block btn-primary\">\r\n                            Ver más...\r\n                        </Link>\r\n\r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nHeroCard.propTypes = {\r\n  hero: PropTypes.object.isRequired\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from \"./HeroCard\";\r\n\r\nexport const HeroList = ({ publisher }) => {\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [publisher]);\r\n\r\n    return (\r\n        <div className='card-columns animate__animated animate__fadeIn'>\r\n            {heroes.map((hero) => (\r\n                <HeroCard key={hero.id} hero={hero} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nHeroList.propTypes = {\r\n  publisher: PropTypes.string.isRequired\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\nexport const getHeroesByPublisher = ( publisher ) => {\r\n    \r\n    const validPublisher = ['DC Comics','Marvel Comics'];\r\n\r\n\r\n    if ( !validPublisher.includes( publisher ) ) {\r\n        throw new Error(`Publisher \"${publisher}\" no es correcto`);\r\n    }\r\n\r\n\r\n    return heroes.filter( hero => hero.publisher === publisher);\r\n\r\n\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DC SCREEN</h1>\r\n            <hr/>\r\n\r\n            <HeroList publisher=\"DC Comics\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({ history }) => {\r\n    const { heroeId } = useParams();\r\n\r\n    const hero = useMemo(() => getHeroById(heroeId), [ heroeId ]);\r\n\r\n\r\n    if (!hero) {\r\n        return <Redirect to='/' />;\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        if (history.length <= 2) {\r\n            history.push('/');\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    };\r\n\r\n    const { superhero, publisher, alter_ego, first_appearance, characters } = hero;\r\n\r\n    return (\r\n        <div className='row mt-5'>\r\n            <div className='col-md-4'>\r\n                <img\r\n                    src={`../assets/heroes/${heroeId}.jpg`}\r\n                    alt={superhero}\r\n                    className='img-thumbnail animate__animated animate__fadeInLeft'\r\n                />\r\n            </div>\r\n\r\n            <div className='col-md-8 animate__animated animate__fadeInRight'>\r\n                <h3>{superhero}</h3>\r\n                <ul className='list-group list-group-flush '>\r\n                    <li className='list-group-item'>\r\n                        {' '}\r\n                        <b> Alter ego: </b> {alter_ego}\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        {' '}\r\n                        <b> Publisher: </b> {publisher}\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        {' '}\r\n                        <b> First Appearance: </b> {first_appearance}\r\n                    </li>\r\n                </ul>\r\n\r\n                <h5>Characters</h5>\r\n\r\n                <p>{characters}</p>\r\n\r\n                <button className='btn btn-outline-info' onClick={handleReturn}>\r\n                    Return\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { heroes } from \"../data/heroes\";\r\n\r\n\r\nexport const getHeroById = ( id ) => {\r\n\r\n    const hero = heroes.filter((hero) => hero.id === id);\r\n    return hero[0];\r\n    \r\n};\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <hr />\r\n\r\n            <HeroList publisher=\"Marvel Comics\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\n\r\nimport queryString from 'query-string'\r\n\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n\r\n\r\n    const location = useLocation();\r\n\r\n\r\n    const { q = '' } = queryString.parse( location.search );\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        searchText: q,\r\n    });\r\n\r\n\r\n\r\n    const { searchText } = formValues;\r\n\r\n    \r\n\r\n    const heroesFiltered = useMemo(() => getHeroesByName(q), [ q ] );\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n\r\n        history.push(`?q=${ searchText }`);\r\n\r\n\r\n    }\r\n    \r\n    return (\r\n        <div className='row'>\r\n            <div className='col-5'>\r\n                <h4>Search Screen</h4>\r\n                <hr />\r\n\r\n                <form onSubmit={handleSearch}>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Find your hero'\r\n                        name='searchText'\r\n                        value={searchText}\r\n                        onChange={handleInputChange}\r\n                        autoComplete='off'\r\n                    />\r\n\r\n                    <button type='submit' className='btn btn-block btn-outline-info mt-1'>\r\n                        Search...\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className='col-7'>\r\n                <h4>Results</h4>\r\n                <hr />\r\n\r\n                {q === '' && <div className='alert alert-info animate__animated animate__fadeInRight'>Search a Hero</div>}\r\n\r\n                {heroesFiltered.map((hero) => (\r\n                    <HeroCard key={hero.id} hero={hero} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n};\r\n","import { heroes } from \"../data/heroes\"\r\n\r\nexport const getHeroesByName = ( name = '' ) => {\r\n    \r\n\r\n    if ( name === '') {\r\n        return [];\r\n    }\r\n\r\n    name = name.toLowerCase();\r\n\r\n    return heroes.filter((hero) => hero.superhero.toLowerCase().includes( name ) );\r\n\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/authContext';\r\nimport { types } from '../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { user, dispatch } = useContext( AuthContext );\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch({\r\n            type: types.logout\r\n        });\r\n\r\n        history.replace('/login');\r\n\r\n        \r\n\r\n    };\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-sm navbar-dark bg-dark'>\r\n            <Link className='navbar-brand' to='/'>\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className='navbar-collapse'>\r\n                <div className='navbar-nav'>\r\n                    <NavLink activeClassName='active' className='nav-item nav-link' exact to='/marvel'>\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink activeClassName='active' className='nav-item nav-link' exact to='/dc'>\r\n                        DC\r\n                    </NavLink>\r\n                    \r\n                    <NavLink activeClassName='active' className='nav-item nav-link' exact to='/search'>\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='navbar-collapse collapse w-100 order-3 dual-collapse2'>\r\n                <ul className='navbar-nav ml-auto'>\r\n                    <span className=\"nav-item nav-link text-info\"> { user.name } </span>\r\n                    <button  className='btn nav-item nav-link' onClick={ handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { DcScreen } from '../components/dc/DcScreen'\r\nimport { HeroScreen } from '../components/heroes/HeroScreen'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen'\r\nimport { SearchScreen } from '../components/search/SearchScreen'\r\nimport { Navbar } from '../components/ui/NavBar'\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-2\">\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={ MarvelScreen }  />\r\n                    <Route exact path=\"/hero/:heroeId\" component={ HeroScreen }  />\r\n                    <Route exact path=\"/dc\" component={ DcScreen }  />\r\n                    <Route exact path=\"/search\" component={ SearchScreen }  />\r\n\r\n\r\n                    <Redirect to=\"/marvel\" />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />)}\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (!isAuthenticated ? <Component {...props} /> : <Redirect to='/' />)}\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useContext } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/authContext';\r\n\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path='/login' component={LoginScreen}  isAuthenticated={user.logged} />\r\n                    <PrivateRoute path='/' component={DashboardRoutes} isAuthenticated={user.logged} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/authContext';\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || {\r\n        logged:false\r\n    };\r\n}\r\n\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        localStorage.setItem('user', JSON.stringify(user) );\r\n\r\n    }, [user])\r\n\r\n    return (\r\n        <AuthContext.Provider value={ { user, dispatch } }>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nimport 'animate.css';\n\nReactDOM.render(\n    <HeroesApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}